#include <gio/gio.h>

#if defined (__ELF__) && ( __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 6))
# define SECTION __attribute__ ((section (".gresource.sqlite"), aligned (8)))
#else
# define SECTION
#endif

static const SECTION union { const guint8 data[5075]; const double alignment; void * const ptr;}  sqlite_resource_data = {
  "\107\126\141\162\151\141\156\164\000\000\000\000\000\000\000\000"
  "\030\000\000\000\304\001\000\000\000\000\000\050\017\000\000\000"
  "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000"
  "\002\000\000\000\004\000\000\000\006\000\000\000\007\000\000\000"
  "\011\000\000\000\011\000\000\000\011\000\000\000\012\000\000\000"
  "\013\000\000\000\015\000\000\000\015\000\000\000\156\214\371\111"
  "\014\000\000\000\304\001\000\000\034\000\166\000\340\001\000\000"
  "\256\002\000\000\103\145\251\316\014\000\000\000\256\002\000\000"
  "\036\000\166\000\320\002\000\000\244\003\000\000\116\241\341\175"
  "\005\000\000\000\244\003\000\000\005\000\114\000\254\003\000\000"
  "\260\003\000\000\255\202\005\335\014\000\000\000\260\003\000\000"
  "\036\000\166\000\320\003\000\000\274\004\000\000\231\241\156\020"
  "\014\000\000\000\274\004\000\000\042\000\166\000\340\004\000\000"
  "\245\005\000\000\324\265\002\000\377\377\377\377\245\005\000\000"
  "\001\000\114\000\250\005\000\000\254\005\000\000\360\221\177\364"
  "\014\000\000\000\254\005\000\000\037\000\166\000\320\005\000\000"
  "\244\006\000\000\063\004\072\073\014\000\000\000\244\006\000\000"
  "\041\000\166\000\310\006\000\000\203\007\000\000\000\275\161\233"
  "\014\000\000\000\203\007\000\000\037\000\166\000\250\007\000\000"
  "\174\010\000\000\102\347\213\124\014\000\000\000\174\010\000\000"
  "\040\000\166\000\240\010\000\000\277\011\000\000\271\372\213\141"
  "\014\000\000\000\277\011\000\000\030\000\166\000\330\011\000\000"
  "\363\013\000\000\317\123\262\066\014\000\000\000\363\013\000\000"
  "\041\000\166\000\030\014\000\000\263\017\000\000\057\174\217\375"
  "\002\000\000\000\263\017\000\000\007\000\114\000\274\017\000\000"
  "\354\017\000\000\052\235\062\101\014\000\000\000\354\017\000\000"
  "\037\000\166\000\020\020\000\000\160\021\000\000\337\176\244\335"
  "\014\000\000\000\160\021\000\000\041\000\166\000\230\021\000\000"
  "\322\023\000\000\163\161\154\151\164\145\137\163\160\145\143\163"
  "\137\144\162\157\160\137\144\142\056\162\141\167\056\170\155\154"
  "\151\001\000\000\001\000\000\000\170\332\225\120\315\012\202\100"
  "\020\276\373\024\303\136\072\372\002\052\124\032\004\025\121\335"
  "\145\324\061\227\266\126\146\267\302\267\157\112\264\010\072\004"
  "\163\231\217\357\217\057\162\304\267\334\266\111\000\040\027\265"
  "\310\170\046\117\354\100\127\261\112\147\171\232\355\347\371\126"
  "\301\105\160\001\320\143\201\216\046\016\052\162\045\353\326\153"
  "\173\121\117\371\247\172\020\157\246\353\114\301\261\102\337\265"
  "\242\076\226\215\060\230\261\023\277\253\061\366\024\253\305\164"
  "\265\317\276\355\137\257\352\043\142\165\150\172\000\154\015\010"
  "\325\300\361\026\112\046\364\102\014\177\025\110\227\273\277\362"
  "\065\123\351\055\167\143\366\210\300\275\041\226\120\351\062\066"
  "\250\265\041\270\153\143\240\030\112\104\341\173\302\044\210\302"
  "\141\337\007\001\352\166\273\000\050\165\165\141\171\051\163\161"
  "\154\151\164\145\137\163\160\145\143\163\137\144\162\157\160\137"
  "\166\151\145\167\056\162\141\167\056\170\155\154\000\000\000\000"
  "\075\001\000\000\001\000\000\000\170\332\165\220\313\016\202\060"
  "\020\105\367\176\305\244\077\300\017\200\011\201\232\064\121\143"
  "\054\076\166\115\205\212\215\225\222\266\076\370\173\007\215\300"
  "\306\345\144\316\334\063\271\261\127\356\041\154\073\237\001\304"
  "\255\164\362\246\202\162\036\164\225\220\075\243\007\221\123\236"
  "\211\015\351\367\123\142\004\326\351\212\022\250\053\031\272\126"
  "\045\244\056\057\310\070\047\073\002\315\335\030\173\115\310\042"
  "\135\162\144\274\275\273\022\021\221\263\254\020\375\061\027\010"
  "\141\040\106\151\365\044\120\051\137\272\357\000\301\342\150\320"
  "\105\040\372\157\147\013\172\144\274\340\323\017\116\326\032\045"
  "\233\321\137\154\167\364\047\142\147\120\057\355\203\037\154\271"
  "\263\055\074\172\245\155\114\007\372\014\072\014\314\107\035\107"
  "\143\063\363\131\034\375\072\173\003\056\317\146\251\000\050\165"
  "\165\141\171\051\163\160\145\143\057\000\000\000\014\000\000\000"
  "\163\161\154\151\164\145\137\163\160\145\143\163\137\143\162\145"
  "\141\164\145\137\144\142\056\162\141\167\056\170\155\154\000\000"
  "\211\001\000\000\001\000\000\000\170\332\215\220\101\153\303\060"
  "\014\205\357\375\025\302\227\035\163\037\161\241\233\035\050\153"
  "\327\322\355\036\324\104\115\314\274\330\310\356\112\376\375\324"
  "\225\144\143\060\030\350\242\307\173\117\037\052\023\361\107\035"
  "\342\162\001\040\123\106\144\174\247\114\234\300\265\132\231\207"
  "\332\330\252\336\053\030\104\226\035\063\036\061\321\135\202\226"
  "\122\303\056\146\027\006\165\115\377\014\117\331\347\325\326\052"
  "\350\132\314\143\224\164\327\364\342\140\306\121\372\316\336\207"
  "\067\255\252\325\346\305\376\256\377\132\325\355\204\126\257\375"
  "\115\200\160\002\204\166\362\344\000\015\023\146\061\026\177\001"
  "\230\365\341\177\367\243\077\167\156\320\352\344\074\045\362\367"
  "\333\235\261\172\277\176\174\252\166\033\143\017\063\240\143\152"
  "\162\340\161\206\233\025\270\364\304\102\045\260\063\342\265\015"
  "\056\316\173\070\116\224\145\361\375\342\345\242\054\246\377\177"
  "\002\120\000\200\376\000\050\165\165\141\171\051\163\161\154\151"
  "\164\145\137\163\160\145\143\163\137\162\145\156\141\155\145\137"
  "\143\157\154\165\155\156\056\162\141\167\056\170\155\154\000\000"
  "\220\001\000\000\001\000\000\000\170\332\225\221\101\016\202\060"
  "\020\105\367\234\142\322\013\160\201\142\122\261\254\112\065\212"
  "\161\331\124\150\320\130\050\051\240\341\366\266\202\312\302\205"
  "\054\147\362\376\274\311\014\156\225\275\013\323\254\002\000\334"
  "\110\053\053\325\051\333\302\265\210\120\274\145\307\224\213\015"
  "\115\304\016\171\140\216\274\210\214\254\031\025\234\244\024\101"
  "\131\310\156\150\124\204\312\374\342\040\153\345\200\240\356\265"
  "\066\267\010\045\204\035\034\123\273\254\113\311\263\126\010\012"
  "\325\346\166\252\240\063\100\130\106\367\010\302\237\246\151\227"
  "\245\252\330\350\276\252\077\256\261\364\062\253\074\360\207\115"
  "\160\172\132\142\344\352\001\343\350\311\351\033\371\350\235\051"
  "\161\370\075\366\052\300\341\373\015\117\175\022\177\363\000\050"
  "\165\165\141\171\051\057\000\000\002\000\000\000\163\161\154\151"
  "\164\145\137\163\160\145\143\163\137\144\162\157\160\137\164\141"
  "\142\154\145\056\162\141\167\056\170\155\154\000\000\000\000\000"
  "\104\001\000\000\001\000\000\000\170\332\175\220\113\012\203\060"
  "\024\105\347\256\342\221\015\270\001\025\254\106\020\154\051\215"
  "\205\316\102\324\150\103\123\043\111\054\165\367\115\245\176\106"
  "\035\136\070\357\236\313\013\014\327\057\252\206\310\003\010\006"
  "\246\331\223\133\256\015\210\046\104\145\174\050\060\115\061\111"
  "\350\031\175\201\075\262\043\116\361\021\043\350\032\146\247\201"
  "\207\250\253\357\016\322\232\115\010\372\121\112\365\010\121\026"
  "\027\304\061\106\215\272\166\010\115\363\244\244\363\065\241\216"
  "\162\225\256\214\125\222\043\150\270\251\365\057\201\125\056\113"
  "\347\103\340\377\131\220\147\370\226\223\222\354\127\124\112\111"
  "\316\372\155\103\171\271\342\305\225\267\300\337\302\130\263\372"
  "\122\255\006\260\263\124\365\162\002\321\202\260\053\064\313\003"
  "\177\173\120\344\005\376\362\272\017\170\013\150\104\000\050\165"
  "\165\141\171\051\163\161\154\151\164\145\137\163\160\145\143\163"
  "\137\162\145\156\141\155\145\137\164\141\142\154\145\056\162\141"
  "\167\056\170\155\154\000\000\000\070\001\000\000\001\000\000\000"
  "\170\332\225\220\335\012\202\100\020\205\357\175\212\141\136\300"
  "\027\130\005\323\015\202\222\100\241\313\145\323\301\042\153\145"
  "\166\055\174\373\326\237\310\253\240\313\231\371\346\234\303\021"
  "\226\370\251\114\027\007\000\242\323\254\357\344\210\055\134\353"
  "\010\313\144\263\227\052\223\105\252\216\070\002\153\144\105\344"
  "\311\101\042\064\265\166\103\107\021\066\325\305\103\314\172\100"
  "\170\364\155\153\156\021\156\223\175\341\031\153\172\256\074\242"
  "\262\135\132\252\351\273\120\236\362\222\136\114\237\133\102\250"
  "\311\126\274\114\340\014\060\215\147\204\360\127\002\171\372\043"
  "\305\154\227\323\013\146\345\305\161\134\270\311\165\145\050\302"
  "\157\051\161\040\302\117\135\157\220\130\143\220\000\050\165\165"
  "\141\171\051\163\161\154\151\164\145\137\163\160\145\143\163\137"
  "\144\162\157\160\137\151\156\144\145\170\056\162\141\167\056\170"
  "\155\154\000\000\000\000\000\000\105\001\000\000\001\000\000\000"
  "\170\332\175\220\101\012\203\060\020\105\367\236\142\310\005\274"
  "\200\026\304\104\020\132\051\215\005\167\041\325\150\103\123\043"
  "\111\054\172\373\246\322\252\253\056\077\274\371\357\063\221\025"
  "\346\305\364\160\010\000\242\201\033\376\024\116\030\013\262\211"
  "\121\136\140\122\061\114\150\312\316\350\003\354\221\035\121\044"
  "\047\202\240\153\270\233\007\021\243\256\276\173\310\030\076\043"
  "\350\107\245\364\043\106\131\162\244\236\261\172\064\265\107\030"
  "\316\323\222\055\327\204\062\217\371\116\337\326\067\142\102\320"
  "\010\133\233\157\002\247\175\126\136\210\040\374\063\041\317\110"
  "\225\323\222\356\147\334\264\126\202\367\333\210\362\162\045\253"
  "\253\005\061\111\353\354\352\303\106\017\040\027\251\356\325\014"
  "\262\005\351\126\150\221\107\341\366\241\103\020\205\277\337\275"
  "\001\045\145\150\371\000\050\165\165\141\171\051\163\161\154\151"
  "\164\145\137\163\160\145\143\163\137\143\162\145\141\164\145\137"
  "\166\151\145\167\056\162\141\167\056\170\155\154\000\000\000\000"
  "\305\002\000\000\001\000\000\000\170\332\255\222\317\116\303\060"
  "\014\306\357\173\012\053\027\216\175\201\256\322\304\122\251\022"
  "\353\046\032\376\334\252\154\365\106\104\326\104\111\126\350\333"
  "\343\166\254\255\020\040\100\134\162\260\363\331\077\333\137\354"
  "\321\065\245\261\311\014\040\266\322\311\043\006\164\036\124\065"
  "\147\367\031\177\050\227\074\055\067\014\152\112\120\104\341\313"
  "\225\207\012\375\316\051\033\224\251\131\047\234\112\107\145\276"
  "\130\161\006\207\112\206\326\222\366\260\173\242\077\316\311\226"
  "\252\235\264\066\317\163\226\056\156\012\176\051\236\323\313\316"
  "\265\207\116\135\346\275\005\065\241\132\145\043\365\011\223\040"
  "\267\032\313\056\033\107\143\364\214\022\015\054\137\263\011\276"
  "\332\114\331\266\306\150\224\365\110\046\156\357\006\060\201\107"
  "\153\010\275\205\206\250\076\303\351\347\370\033\111\226\346\153"
  "\301\037\263\102\024\077\006\132\327\272\005\265\007\025\240\062"
  "\110\133\062\001\132\014\200\257\312\207\141\205\327\016\145\300"
  "\236\031\314\267\212\377\235\210\034\363\233\263\057\161\257\152"
  "\325\173\351\303\361\253\111\046\352\015\072\266\367\311\054\216"
  "\056\336\175\003\324\234\345\377\000\050\165\165\141\171\051\163"
  "\161\154\151\164\145\137\163\160\145\143\163\137\144\163\156\056"
  "\162\141\167\056\170\155\154\000\041\006\000\000\001\000\000\000"
  "\170\332\255\125\115\157\332\100\020\275\367\127\214\174\011\110"
  "\015\334\043\034\311\305\113\204\342\000\005\242\346\206\026\173"
  "\154\126\131\166\255\335\165\011\375\365\035\333\301\006\051\121"
  "\035\225\023\232\257\235\067\357\015\343\121\302\035\277\265\350"
  "\156\155\216\361\375\067\200\121\316\015\337\243\103\143\113\363"
  "\334\001\042\361\275\360\307\146\026\074\061\017\062\052\075\346"
  "\350\173\131\274\243\014\143\370\321\003\125\110\251\137\175\157"
  "\022\104\053\312\121\124\110\045\324\143\313\055\126\246\007\011"
  "\332\330\370\336\172\127\073\100\247\300\041\071\345\070\015\005"
  "\375\364\016\302\355\164\341\300\121\332\040\331\366\075\030\176"
  "\210\047\130\054\330\054\334\020\054\366\262\146\263\325\164\076"
  "\073\307\266\325\132\042\127\055\262\365\362\271\001\026\344\071"
  "\252\004\156\350\375\233\006\127\210\251\120\150\101\244\125\357"
  "\052\010\370\346\120\131\241\025\050\304\244\004\271\105\340\125"
  "\171\155\226\251\357\324\000\067\131\261\107\345\274\032\060\101"
  "\046\074\233\337\134\026\170\137\021\063\032\266\216\172\246\141"
  "\063\324\147\244\207\323\145\067\316\163\131\144\102\371\136\052"
  "\044\132\224\167\117\363\220\371\213\351\370\161\062\217\102\266"
  "\154\104\021\006\143\247\315\261\035\374\344\201\303\016\015\126"
  "\043\065\262\224\257\201\260\140\051\001\223\317\304\040\011\226"
  "\301\146\362\074\033\257\111\207\125\147\041\330\233\063\034\322"
  "\102\305\216\070\266\015\044\246\370\226\372\026\226\147\325\236"
  "\340\145\036\364\112\036\013\222\301\174\207\301\140\320\377\210"
  "\361\262\317\227\011\137\262\007\366\262\350\214\277\336\031\070"
  "\125\135\154\122\305\143\035\151\220\137\015\147\115\370\170\036"
  "\105\301\327\030\217\164\314\245\370\103\313\033\353\075\275\051"
  "\354\277\171\217\265\224\274\204\017\004\140\247\023\342\077\232"
  "\217\203\210\066\236\376\105\341\070\130\261\353\051\060\171\354"
  "\074\313\057\072\025\220\322\136\212\114\301\053\036\317\347\040"
  "\167\214\227\301\053\162\137\337\233\356\254\007\344\072\264\307"
  "\244\005\132\007\126\077\043\341\252\023\050\065\117\316\362\110"
  "\011\241\262\152\223\312\310\246\211\364\372\377\275\123\147\046"
  "\135\374\321\360\362\213\360\027\004\251\376\314\000\050\165\165"
  "\141\171\051\163\161\154\151\164\145\137\163\160\145\143\163\137"
  "\143\162\145\141\164\145\137\164\141\142\154\145\056\162\141\167"
  "\056\170\155\154\000\000\000\000\275\015\000\000\001\000\000\000"
  "\170\332\255\127\113\123\333\060\020\276\363\053\064\071\264\160"
  "\012\347\066\060\043\034\007\074\070\262\353\307\114\351\305\143"
  "\154\045\321\240\130\251\037\264\351\344\307\167\045\307\217\200"
  "\003\012\303\005\360\256\166\367\333\207\276\025\223\202\346\317"
  "\221\330\134\237\041\064\331\304\171\274\246\045\315\013\304\322"
  "\253\121\200\157\154\063\232\232\263\310\035\241\014\064\040\212"
  "\037\071\375\132\240\224\026\111\316\066\045\023\331\110\232\366"
  "\215\173\266\004\317\315\021\132\246\161\271\335\200\365\062\131"
  "\301\241\074\217\267\340\257\342\134\074\135\215\146\330\366\315"
  "\306\075\201\237\243\332\171\027\113\252\366\101\040\014\070\213"
  "\236\143\136\321\353\122\352\043\251\235\214\073\151\015\146\334"
  "\242\171\003\135\140\316\335\076\272\107\041\070\215\263\016\133"
  "\340\205\055\264\200\256\067\002\300\157\221\212\073\004\110\245"
  "\362\101\054\326\214\070\201\371\323\362\003\137\033\222\223\361"
  "\055\142\013\304\112\224\012\012\205\022\045\332\322\022\321\277"
  "\254\050\333\062\032\071\215\113\132\243\106\342\115\223\217\346"
  "\324\373\054\256\317\100\160\266\367\241\172\255\262\234\131\246"
  "\075\365\043\374\162\220\022\301\253\165\126\064\103\324\032\105"
  "\013\106\171\252\114\015\307\016\347\344\344\131\232\051\007\152"
  "\170\320\370\175\367\301\203\173\314\375\212\145\345\325\010\064"
  "\112\167\044\334\024\324\250\326\153\104\363\255\137\007\321\052"
  "\010\061\334\144\237\375\323\164\151\140\133\327\147\022\163\075"
  "\247\204\204\266\366\074\022\030\046\070\157\153\171\306\141\340"
  "\130\304\320\166\216\253\122\040\226\045\071\135\123\231\227\106"
  "\210\220\130\077\102\123\073\102\230\261\337\225\136\131\334\173"
  "\363\101\333\257\233\263\265\344\215\047\272\325\162\016\204\213"
  "\103\073\170\147\326\373\021\246\164\021\127\274\273\362\373\157"
  "\244\156\254\126\114\343\316\064\356\117\210\150\254\150\362\324"
  "\121\214\374\202\253\234\025\145\036\263\136\167\336\217\353\330"
  "\066\016\314\123\042\213\065\220\015\105\300\066\053\221\166\020"
  "\004\347\261\134\107\352\030\072\277\261\010\366\036\166\304\061"
  "\260\157\136\350\325\300\041\063\333\062\202\223\300\144\013\316"
  "\222\036\331\356\005\050\247\005\060\233\002\124\043\105\347\036"
  "\344\172\203\215\373\035\276\161\274\140\067\303\226\275\263\156"
  "\211\343\231\073\317\164\155\154\264\070\153\276\125\161\025\235"
  "\116\012\012\223\231\045\264\246\122\030\276\310\157\151\116\344"
  "\224\055\063\065\135\203\373\105\035\367\140\211\253\105\243\307"
  "\240\205\250\362\004\216\104\123\250\107\155\350\107\115\104\217"
  "\056\150\056\321\244\307\127\141\116\027\221\122\152\254\303\027"
  "\213\102\302\175\271\055\024\227\027\155\225\353\117\140\003\124"
  "\256\050\132\274\252\300\221\076\317\356\153\307\047\157\221\166"
  "\174\216\073\226\005\166\117\362\337\326\370\260\101\143\125\362"
  "\175\001\006\112\276\070\016\110\156\250\106\174\240\310\305\237"
  "\116\176\320\047\226\106\320\252\127\115\032\070\067\170\246\067"
  "\250\375\040\175\161\007\352\140\252\217\015\352\034\007\306\335"
  "\133\313\370\360\032\066\105\134\307\145\262\212\344\351\342\333"
  "\145\123\265\271\024\356\167\362\176\162\224\210\145\313\346\122"
  "\302\123\150\015\343\003\163\024\147\360\070\242\150\337\324\354"
  "\131\360\147\232\016\215\266\102\210\174\153\356\332\247\077\366"
  "\124\216\016\011\335\251\056\353\065\031\306\211\044\223\050\171"
  "\354\362\163\062\124\155\122\371\270\253\225\103\150\211\203\260"
  "\021\130\016\371\050\324\251\151\233\237\002\065\245\234\176\016"
  "\324\311\270\341\303\366\261\171\100\220\365\213\032\350\334\017"
  "\074\154\221\300\357\330\362\226\213\307\230\367\126\125\061\114"
  "\232\235\161\004\277\055\162\333\143\374\166\311\151\334\362\201"
  "\064\325\252\105\347\365\303\027\175\131\226\337\321\345\305\051"
  "\051\313\277\353\377\331\376\003\056\126\140\223\000\050\165\165"
  "\141\171\051\163\161\154\151\164\145\057\000\000\015\000\000\000"
  "\003\000\000\000\016\000\000\000\013\000\000\000\011\000\000\000"
  "\000\000\000\000\010\000\000\000\006\000\000\000\001\000\000\000"
  "\012\000\000\000\004\000\000\000\007\000\000\000\163\161\154\151"
  "\164\145\137\163\160\145\143\163\137\141\144\144\137\143\157\154"
  "\165\155\156\056\162\141\167\056\170\155\154\000\000\000\000\000"
  "\342\003\000\000\001\000\000\000\170\332\235\223\321\156\202\060"
  "\024\206\357\175\212\223\336\354\146\011\057\000\046\014\061\133"
  "\206\150\006\134\154\067\244\102\325\306\112\111\133\114\334\323"
  "\357\130\024\131\242\103\167\331\376\075\337\371\150\017\256\146"
  "\152\237\313\172\074\002\160\153\252\350\216\031\246\064\360\322"
  "\043\301\074\312\146\161\076\011\247\371\202\100\205\021\356\111"
  "\321\354\252\047\015\045\323\205\342\265\341\262\042\307\342\176"
  "\271\255\116\375\227\050\314\143\177\026\022\130\227\324\034\152"
  "\054\137\027\033\074\244\024\075\040\260\021\102\156\075\062\365"
  "\243\044\074\363\123\272\024\214\264\364\323\012\233\035\063\002"
  "\316\325\076\047\313\107\033\115\071\023\145\013\156\261\010\306"
  "\352\174\117\105\303\306\205\375\314\374\030\273\316\145\273\355"
  "\357\164\002\177\011\245\237\213\133\102\033\136\031\217\140\142"
  "\263\033\202\023\214\301\346\127\374\020\300\326\114\375\327\055"
  "\171\373\372\345\326\040\357\242\221\176\144\235\105\302\277\207"
  "\156\076\011\374\350\136\132\101\305\340\103\306\131\324\247\055"
  "\245\024\214\126\327\201\261\064\200\347\243\001\046\216\260\237"
  "\105\351\300\174\364\301\023\266\242\215\060\335\044\236\326\140"
  "\357\372\031\166\264\102\222\124\007\340\053\150\207\005\270\206"
  "\170\236\336\243\023\274\206\301\373\003\062\301\206\025\333\116"
  "\305\256\260\151\245\215\242\366\252\155\263\336\323\353\361\310"
  "\165\316\077\366\017\345\052\076\243\000\050\165\165\141\171\051"
  "\163\161\154\151\164\145\137\163\160\145\143\163\137\143\162\145"
  "\141\164\145\137\151\156\144\145\170\056\162\141\167\056\170\155"
  "\154\000\000\000\000\000\000\000\063\010\000\000\001\000\000\000"
  "\170\332\325\126\115\157\233\100\020\075\047\277\142\305\051\071"
  "\321\252\267\312\266\104\000\113\110\024\122\203\245\344\204\066"
  "\060\161\126\305\273\164\167\235\332\122\177\174\227\005\002\304"
  "\004\210\157\275\130\232\331\067\157\336\174\011\057\004\360\327"
  "\204\025\253\153\204\026\005\346\170\017\022\270\100\044\133\032"
  "\136\340\270\017\211\343\256\223\173\003\121\365\242\134\064\203"
  "\043\312\100\244\234\024\222\060\152\224\201\335\320\116\144\374"
  "\170\357\032\150\227\141\171\052\124\354\056\175\121\040\316\361"
  "\111\261\035\362\234\375\132\032\361\146\253\040\202\035\170\252"
  "\020\045\116\174\377\322\044\213\225\131\363\253\014\212\047\171"
  "\305\371\001\126\333\300\373\271\165\027\146\353\251\064\230\157"
  "\042\106\104\005\326\217\051\121\153\313\217\334\106\104\240\176"
  "\215\252\342\246\174\252\135\346\110\222\060\110\142\353\316\237"
  "\231\250\051\077\161\074\073\256\002\243\244\311\037\122\044\361"
  "\123\076\221\320\133\007\141\354\076\170\121\034\165\163\076\061"
  "\226\003\246\357\373\335\060\347\047\104\236\021\221\050\143\040"
  "\020\145\022\235\100\042\070\022\041\337\112\266\071\140\011\210"
  "\350\312\331\150\310\300\250\164\205\123\223\352\230\142\165\255"
  "\034\245\117\300\357\003\320\024\072\105\256\075\327\167\242\104"
  "\125\270\047\224\110\330\213\245\361\125\031\370\130\033\337\172"
  "\153\012\031\172\046\220\147\067\342\166\154\113\065\353\047\007"
  "\325\237\262\251\347\126\253\033\224\200\030\127\075\052\070\010"
  "\321\336\114\257\121\244\202\047\032\076\275\332\037\227\143\207"
  "\276\157\305\363\356\256\122\152\263\275\042\002\244\230\136\130"
  "\326\016\236\345\071\056\117\134\303\320\315\235\027\130\233\307"
  "\277\101\150\133\221\173\073\276\216\121\270\211\223\160\343\270"
  "\233\117\335\277\140\134\266\347\037\051\013\225\241\165\256\205"
  "\331\354\104\273\044\072\120\324\112\312\246\151\376\232\240\244"
  "\353\367\132\277\126\075\256\061\044\233\067\172\163\202\107\302"
  "\121\136\316\244\302\160\343\356\075\160\366\247\365\367\026\306"
  "\212\354\263\065\071\007\211\024\150\106\350\156\020\132\071\007"
  "\022\315\022\340\270\163\024\070\160\211\204\256\273\355\115\307"
  "\253\067\140\140\344\372\013\362\077\315\374\152\126\257\077\370"
  "\342\235\343\050\121\027\322\303\135\135\336\142\175\162\315\205"
  "\225\327\127\375\123\370\007\246\052\222\370\000\050\165\165\141"
  "\171\051" };

static GStaticResource static_resource = { sqlite_resource_data.data, sizeof (sqlite_resource_data.data) - 1 /* nul terminator */, NULL, NULL, NULL };

G_GNUC_INTERNAL
GResource *sqlite_get_resource (void);
GResource *sqlite_get_resource (void)
{
  return g_static_resource_get_resource (&static_resource);
}
/* GLIB - Library of useful routines for C programming
 * Copyright (C) 1995-1997  Peter Mattis, Spencer Kimball and Josh MacDonald
 *
 * SPDX-License-Identifier: LGPL-2.1-or-later
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	 See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, see <http://www.gnu.org/licenses/>.
 */

/*
 * Modified by the GLib Team and others 1997-2000.  See the AUTHORS
 * file for a list of people on the GLib Team.  See the ChangeLog
 * files for a list of changes.  These files are distributed with
 * GLib at ftp://ftp.gtk.org/pub/gtk/.
 */

#ifndef __G_CONSTRUCTOR_H__
#define __G_CONSTRUCTOR_H__

/*
  If G_HAS_CONSTRUCTORS is true then the compiler support *both* constructors and
  destructors, in a usable way, including e.g. on library unload. If not you're on
  your own.

  Some compilers need #pragma to handle this, which does not work with macros,
  so the way you need to use this is (for constructors):

  #ifdef G_DEFINE_CONSTRUCTOR_NEEDS_PRAGMA
  #pragma G_DEFINE_CONSTRUCTOR_PRAGMA_ARGS(my_constructor)
  #endif
  G_DEFINE_CONSTRUCTOR(my_constructor)
  static void my_constructor(void) {
   ...
  }

*/

#ifndef __GTK_DOC_IGNORE__

#if  __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)

#define G_HAS_CONSTRUCTORS 1

#define G_DEFINE_CONSTRUCTOR(_func) static void __attribute__((constructor)) _func (void);
#define G_DEFINE_DESTRUCTOR(_func) static void __attribute__((destructor)) _func (void);

#elif defined (_MSC_VER) && (_MSC_VER >= 1500)
/* Visual studio 2008 and later has _Pragma */

/*
 * Only try to include gslist.h if not already included via glib.h,
 * so that items using gconstructor.h outside of GLib (such as
 * GResources) continue to build properly.
 */
#ifndef __G_LIB_H__
#include "gslist.h"
#endif

#include <stdlib.h>

#define G_HAS_CONSTRUCTORS 1

/* We do some weird things to avoid the constructors being optimized
 * away on VS2015 if WholeProgramOptimization is enabled. First we
 * make a reference to the array from the wrapper to make sure its
 * references. Then we use a pragma to make sure the wrapper function
 * symbol is always included at the link stage. Also, the symbols
 * need to be extern (but not dllexport), even though they are not
 * really used from another object file.
 */

/* We need to account for differences between the mangling of symbols
 * for x86 and x64/ARM/ARM64 programs, as symbols on x86 are prefixed
 * with an underscore but symbols on x64/ARM/ARM64 are not.
 */
#ifdef _M_IX86
#define G_MSVC_SYMBOL_PREFIX "_"
#else
#define G_MSVC_SYMBOL_PREFIX ""
#endif

#define G_DEFINE_CONSTRUCTOR(_func) G_MSVC_CTOR (_func, G_MSVC_SYMBOL_PREFIX)
#define G_DEFINE_DESTRUCTOR(_func) G_MSVC_DTOR (_func, G_MSVC_SYMBOL_PREFIX)

#define G_MSVC_CTOR(_func,_sym_prefix) \
  static void _func(void); \
  extern int (* _array ## _func)(void);              \
  int _func ## _wrapper(void) { _func(); g_slist_find (NULL,  _array ## _func); return 0; } \
  __pragma(comment(linker,"/include:" _sym_prefix # _func "_wrapper")) \
  __pragma(section(".CRT$XCU",read)) \
  __declspec(allocate(".CRT$XCU")) int (* _array ## _func)(void) = _func ## _wrapper;

#define G_MSVC_DTOR(_func,_sym_prefix) \
  static void _func(void); \
  extern int (* _array ## _func)(void);              \
  int _func ## _constructor(void) { atexit (_func); g_slist_find (NULL,  _array ## _func); return 0; } \
   __pragma(comment(linker,"/include:" _sym_prefix # _func "_constructor")) \
  __pragma(section(".CRT$XCU",read)) \
  __declspec(allocate(".CRT$XCU")) int (* _array ## _func)(void) = _func ## _constructor;

#elif defined (_MSC_VER)

#define G_HAS_CONSTRUCTORS 1

/* Pre Visual studio 2008 must use #pragma section */
#define G_DEFINE_CONSTRUCTOR_NEEDS_PRAGMA 1
#define G_DEFINE_DESTRUCTOR_NEEDS_PRAGMA 1

#define G_DEFINE_CONSTRUCTOR_PRAGMA_ARGS(_func) \
  section(".CRT$XCU",read)
#define G_DEFINE_CONSTRUCTOR(_func) \
  static void _func(void); \
  static int _func ## _wrapper(void) { _func(); return 0; } \
  __declspec(allocate(".CRT$XCU")) static int (*p)(void) = _func ## _wrapper;

#define G_DEFINE_DESTRUCTOR_PRAGMA_ARGS(_func) \
  section(".CRT$XCU",read)
#define G_DEFINE_DESTRUCTOR(_func) \
  static void _func(void); \
  static int _func ## _constructor(void) { atexit (_func); return 0; } \
  __declspec(allocate(".CRT$XCU")) static int (* _array ## _func)(void) = _func ## _constructor;

#elif defined(__SUNPRO_C)

/* This is not tested, but i believe it should work, based on:
 * http://opensource.apple.com/source/OpenSSL098/OpenSSL098-35/src/fips/fips_premain.c
 */

#define G_HAS_CONSTRUCTORS 1

#define G_DEFINE_CONSTRUCTOR_NEEDS_PRAGMA 1
#define G_DEFINE_DESTRUCTOR_NEEDS_PRAGMA 1

#define G_DEFINE_CONSTRUCTOR_PRAGMA_ARGS(_func) \
  init(_func)
#define G_DEFINE_CONSTRUCTOR(_func) \
  static void _func(void);

#define G_DEFINE_DESTRUCTOR_PRAGMA_ARGS(_func) \
  fini(_func)
#define G_DEFINE_DESTRUCTOR(_func) \
  static void _func(void);

#else

/* constructors not supported for this compiler */

#endif

#endif /* __GTK_DOC_IGNORE__ */
#endif /* __G_CONSTRUCTOR_H__ */

#ifdef G_HAS_CONSTRUCTORS

#ifdef G_DEFINE_CONSTRUCTOR_NEEDS_PRAGMA
#pragma G_DEFINE_CONSTRUCTOR_PRAGMA_ARGS(sqliteresource_constructor)
#endif
G_DEFINE_CONSTRUCTOR(sqliteresource_constructor)
#ifdef G_DEFINE_DESTRUCTOR_NEEDS_PRAGMA
#pragma G_DEFINE_DESTRUCTOR_PRAGMA_ARGS(sqliteresource_destructor)
#endif
G_DEFINE_DESTRUCTOR(sqliteresource_destructor)

#else
#warning "Constructor not supported on this compiler, linking in resources will not work"
#endif

static void sqliteresource_constructor (void)
{
  g_static_resource_init (&static_resource);
}

static void sqliteresource_destructor (void)
{
  g_static_resource_fini (&static_resource);
}
